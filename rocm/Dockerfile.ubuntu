
ARG DISTRO
ARG DISTRO_VERSION
FROM ${DISTRO}:${DISTRO_VERSION}

LABEL maintainer="bob.robey@amd.com"

ENV HOME /root
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US
ENV LC_ALL C
ENV SHELL /bin/bash
ENV BASH_ENV /etc/bash.bashrc
ENV DEBIAN_FRONTEND noninteractive

WORKDIR /tmp
SHELL [ "/bin/bash", "-c" ]

ARG DISTRO
ARG DISTRO_VERSION
ARG ROCM_VERSION="0.0"
ARG AMDGPU_GFXMODEL=gfx90a
ENV PATH ${HOME}/.local/bin:${PATH}

COPY rocm/sources/scripts/baseospackages_setup.sh /tmp/baseospackages_setup.sh

RUN  /tmp/baseospackages_setup.sh && \
     rm /tmp/baseospackages_setup.sh

COPY rocm/sources/scripts/rocm_setup.sh /tmp/rocm_setup.sh

RUN  /tmp/rocm_setup.sh --rocm-version ${ROCM_VERSION} && \
     rm /tmp/rocm_setup.sh

COPY rocm/sources/lua/bash.bashrc /tmp/bash.bashrc
RUN cat /tmp/bash.bashrc >> /etc/bash.bashrc && rm -f /tmp/bash.bashrc

# omnitrace (omnitrace-avail) will throw this message using default values, so change default to 2
# [omnitrace][116] /proc/sys/kernel/perf_event_paranoid has a value of 3. Disabling PAPI (requires a value <= 2)...
# [omnitrace][116] In order to enable PAPI support, run 'echo N | sudo tee /proc/sys/kernel/perf_event_paranoid' where                   N is <= 2
RUN if (( `cat /proc/sys/kernel/perf_event_paranoid` > 0 )); then echo "Please do:  echo 0  | sudo tee /proc/sys/kernel/perf_event_paranoid"; fi

USER root

WORKDIR /app 

#
# install OpenMPI and UCX 
#

# Grab any cache files of compiler builds
#COPY CacheFiles/${DISTRO}-${DISTRO_VERSION}-rocm-${ROCM_VERSION}/ucx.tgz /opt/rocmplus-${ROCM_VERSION}/ucx.tgz
#COPY CacheFiles/${DISTRO}-${DISTRO_VERSION}-rocm-${ROCM_VERSION}/openmpi.tgz /opt/rocmplus-${ROCM_VERSION}/openmpi.tgz

COPY rocm/sources/scripts/openmpi_setup.sh /tmp/openmpi_setup.sh

RUN  /tmp/openmpi_setup.sh --rocm-version ${ROCM_VERSION} && \
     rm /tmp/openmpi_setup.sh

#
# Install mvapich
#

COPY rocm/sources/scripts/mvapich2_setup.sh /tmp/mvapich2_setup.sh

RUN  /tmp/mvapich2_setup.sh --rocm-version ${ROCM_VERSION} && \
     rm /tmp/mvapich2_setup.sh

# 
# add slurm 
#
# Adding render group early to avoid something else grabbing it and causing problems for slurm
RUN groupadd render -g 109
RUN groupadd renderalt -g 110

    # these are for slurm   :  libpmi2-0-dev 
RUN  apt-get update -y \
     && apt-cache search libpmi* \
     && apt-get install -y libpmi2-0-dev \
     && apt-get  install -y slurmd slurmctld

RUN apt-get -q clean && sudo rm -rf /var/lib/apt/lists/*

COPY rocm/sources/slurm/slurm_${AMDGPU_GFXMODEL}.conf /etc/slurm/slurm.conf
COPY rocm/sources/slurm/gres_${AMDGPU_GFXMODEL}.conf /etc/slurm/gres.conf

RUN chown slurm /etc/slurm/slurm.conf \
    && chgrp slurm /etc/slurm/slurm.conf  \
    && chmod 777 /etc/slurm

RUN echo "OPTIONS=\"--force --key-file /etc/munge/munge.key --num-threads 10\"" > /etc/default/munge

ENV LC_ALL C.UTF-8

WORKDIR /home

SHELL [ "/bin/bash", "--login", "-c" ]
